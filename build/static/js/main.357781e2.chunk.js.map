{"version":3,"sources":["components/Home.js","components/Navbar.js","utils/PortoList.js","components/Portfolio.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Fragment","src","id","className","href","role","width","height","alt","description","name","class","Porto","map","item","App","Navbar","exact","path","component","Home","Portfolio","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sQAEe,aACb,OACE,kBAAC,IAAMA,SAAP,KACE,yBAAKC,IAAI,oBAAoBC,GAAG,oBAChC,6BAASA,GAAG,OAAOC,UAAU,aACzB,yBAAKA,UAAU,aACP,wBAAIA,UAAU,aAAd,kBAAyC,iDACzC,wBAAIA,UAAU,aAAd,mCACA,uBAAGA,UAAU,yBAAyBC,KAAK,aAAaC,KAAK,UAA7D,+BCRH,aACX,OACE,yBAAKF,UAAU,gCACb,uBAAGA,UAAU,eAAeC,KAAK,KAC/B,yBACEH,IAAI,uBACJK,MAAM,MACNC,OAAO,KACPJ,UAAU,2BACVK,IAAI,mBAGR,wBAAIL,UAAU,2BACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,SAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,cAA7B,cAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,YAA7B,eCtBG,GACX,CACIA,KAAM,4DACNH,IAAK,4BACLO,IAAK,oBACLC,YAAa,mJACbC,KAAM,qBAEV,CACIN,KAAM,iDACNH,IAAK,4BACLO,IAAK,mBACLC,YAAa,+DACbC,KAAM,oBAEV,CACIN,KAAM,IACNH,IAAK,4BACLO,IAAK,oBACLC,YAAa,sIACbC,KAAM,qBAEV,CACIN,KAAM,4CACNH,IAAK,4BACLO,IAAK,oBACLC,YAAa,wKACbC,KAAM,qBAEV,CACIN,KAAM,6CACNH,IAAK,4BACLO,IAAK,iBACLC,YAAa,wFACbC,KAAM,kBACR,CACEN,KAAM,IACNH,IAAK,4BACLO,IAAK,gBACLC,YAAa,gBACbC,KAAM,kBCrCC,aACb,OACE,0BAAMC,MAAM,mBACV,6BAAST,GAAG,aACV,yBAAKS,MAAM,uBACT,yBAAKA,MAAM,kBACRC,EAAMC,KAAI,SAAAC,GAAI,OACb,yBAAKH,MAAM,qBACT,uBAAGA,MAAM,gBAAgBP,KAAMU,EAAKV,MAClC,yBAAKH,IAAKa,EAAKb,IAAKU,MAAM,YAAYH,IAAKM,EAAKN,MAChD,yBAAKG,MAAM,yBACT,yBAAKA,MAAM,gBAAX,IAA4BG,EAAKJ,KAAjC,KACA,yBAAKC,MAAM,kCACRG,EAAKL,wBCdb,aACb,OACE,yBAAKP,GAAG,UAAUC,UAAU,aAC1B,yBAAKA,UAAU,QACb,yBAAKF,IAAI,uBAAuBE,UAAU,eAAeK,IAAI,QAC7D,yBAAKL,UAAU,aACb,wBAAIA,UAAU,cAAd,iBACA,uBAAGA,UAAU,aAAb,mBACA,uBAAGA,UAAU,aAAb,yBACA,uBAAGA,UAAU,aAAb,kBACA,yBAAKA,UAAU,wBAAwBE,KAAK,SAA5C,WAGA,uBACED,KAAK,uCACLD,UAAU,uB,MCMPY,MAff,WACE,OACE,yBAAKZ,UAAU,OACb,kBAAC,IAAD,KACE,kBAACa,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWE,IAC1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,WAAWC,UAAWG,QCJ5BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.357781e2.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nexport default ()=>{\n  return (\n    <React.Fragment>\n      <img src=\"./images/bkgd.jpg\" id=\"home-background\"/>\n      <section id=\"main\" className=\"container\">\n          <div className=\"jumbotron\">\n                  <h1 className=\"display-5\">Hi. My name is <span>Greg Plumblee.</span></h1>\n                  <h1 className=\"display-5\">I'm a full-stack web developer.</h1>\n                  <a className=\"btn btn-primary btn-lg\" href=\"/portfolio\" role=\"button\">Check out my portfolio!</a>\n          </div>\n      </section>\n    </React.Fragment>\n);\n}\n","import React from \"react\";\n\nexport default ()=>{\n    return (\n      <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img\n            src=\"./images/GP-logo.svg\"\n            width=\"120\"\n            height=\"48\"\n            className=\"d-inline-block align-top\"\n            alt=\"GP Web Design\"\n          />\n        </a>\n        <ul className=\"nav justify-content-end\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/portfolio\">Portfolio</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/contact\">Contact</a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n\n","export default [\n    {\n        href: \"https://austinaukairodrigues.github.io/Calorie-Companion/\",\n        src: \"images/portfolio/job1.jpg\",\n        alt: \"Calorie Companion\",\n        description: \"Find nearby restaurants that give you nutrition charts for their menu, then get directions. A daily calorie counter is provided for convenience.\",\n        name: \"Calorie Companion\"\n    },\n    {\n        href: \"https://gplumblee.github.io/weather-dashboard/\",\n        src: \"images/portfolio/job2.jpg\",\n        alt: \"Weather Forecast\",\n        description: \"Search a city for the current weather\\nplus a 5-day forecast\",\n        name: \"Weather Forecast\"\n    },\n    {\n        href: \"#\",\n        src: \"images/portfolio/job3.jpg\",\n        alt: \"Timed Coding Quiz\",\n        description: \"Answer five coding questions with multiple-choice answers within a minute. A wrong answer will subtract ten seconds from the timer.\",\n        name: \"Timed Coding Quiz\"\n    },\n    {\n        href: \"https://gentle-bayou-98216.herokuapp.com/\",\n        src: \"images/portfolio/job4.jpg\",\n        alt: \"The Boxing Office\",\n        description: \"Match two box office hits against each other to see who wins two out of three rounds of different ratings. Watch as two animated posters go at it in the boxing ring!\",\n        name: \"The Boxing Office\"\n    },\n    {\n        href: \"https://fierce-cliffs-69263.herokuapp.com/\",\n        src: \"images/portfolio/job5.jpg\",\n        alt: \"Eat Da Burger!\",\n        description: \"Add your favorite burger to the menu, then move it to the devoured column once eaten.\",\n        name: \"Eat Da Burger!\"\n    },{\n        href: \"#\",\n        src: \"images/portfolio/job6.jpg\",\n        alt: \"Final Project\",\n        description: \"Final Project\",\n        name: \"Final Project\"\n    }\n]","import React from \"react\";\nimport Porto from \"../utils/PortoList\";\n\nexport default () => {\n  return (\n    <main class=\"container-fluid\">\n      <section id=\"portfolio\">\n        <div class=\"container-fluid p-0\">\n          <div class=\"row no-gutters\">\n            {Porto.map(item => (\n              <div class=\"col-lg-4 col-sm-6\">\n                <a class=\"portfolio-box\" href={item.href}>\n                  <img src={item.src} class=\"img-fluid\" alt={item.alt} />\n                  <div class=\"portfolio-box-caption\">\n                    <div class=\"project-name\"> {item.name} </div>\n                    <div class=\"project-category text-white-50\">\n                      {item.description}\n                    </div>\n                  </div>\n                </a>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div id=\"contact\" className=\"container\">\n      <div className=\"card\">\n        <img src=\"images/head-shot.jpg\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Greg Plumblee</h5>\n          <p className=\"card-text\">Studio City, CA</p>\n          <p className=\"card-text\">gplumblee@hotmail.com</p>\n          <p className=\"card-text\">(818) 522-5772</p>\n          <div className=\"alert alert-secondary\" role=\"alert\">\n            CONNECT\n          </div>\n          <a\n            href=\"http://www.linkedin.com/in/gplumblee\"\n            className=\"fa fa-linkedin\"\n          ></a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/portfolio' component={Portfolio}/>\n        <Route exact path='/contact' component={Contact}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}